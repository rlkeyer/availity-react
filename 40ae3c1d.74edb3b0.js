(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{168:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),b=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=b(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=b(n),m=a,d=s["".concat(i,".").concat(m)]||s[m]||u[m]||o;return n?r.a.createElement(d,p(p({ref:t},l),{},{components:n})):r.a.createElement(d,p({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),o=(n(0),n(168)),i=["components"],p={title:"<Pagination />"},c={unversionedId:"components/pagination/pagination",id:"components/pagination/pagination",isDocsHomePage:!1,title:"<Pagination />",description:"This is the provider component needed for @availity/pagination components to work. All @availity/pagination components must be children of a Pagination provider.",source:"@site/docs/components/pagination/pagination.md",slug:"/components/pagination/pagination",permalink:"/availity-react/components/pagination/pagination",editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/pagination/pagination.md",version:"current",sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/availity-react/components/pagination/index"},next:{title:"<PaginationControls />",permalink:"/availity-react/components/pagination/controls"}},l=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[]}],b={toc:l};function s(e){var t=e.components,n=Object(r.a)(e,i);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This is the provider component needed for ",Object(o.b)("inlineCode",{parentName:"p"},"@availity/pagination")," components to work. All ",Object(o.b)("inlineCode",{parentName:"p"},"@availity/pagination")," components must be children of a Pagination provider."),Object(o.b)("h3",{id:"example"},"Example"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Pagination from '@availity/pagination';\n\nconst Example = () => (\n  <Pagination itemsPerPage={25} items={this.state.items}>\n    <Pagination.Content component={Component} />\n  </Pagination>\n);\n")),Object(o.b)("h4",{id:"live-example--storybook"},"Live example: ",Object(o.b)("a",{href:"https://availity.github.io/availity-react/storybook/?path=/story/components-pagination--default"}," Storybook")),Object(o.b)("h3",{id:"props"},"Props"),Object(o.b)("h4",{id:"items-object--currentpage-number-itemsperpage-number---items-object-totalcount-number-"},Object(o.b)("inlineCode",{parentName:"h4"},"items? object[] | (currentPage: number, itemsPerPage: number) => { items: object[], totalCount: number }")),Object(o.b)("p",null,"If Array, defaults ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," to the length of the array, and page values are sliced from the Array. If a function, it is called with the current page as an argument and expects an array of items to be returned."),Object(o.b)("h4",{id:"itemsperpage-number"},Object(o.b)("inlineCode",{parentName:"h4"},"itemsPerPage?: number")),Object(o.b)("p",null,"The total amount of items to render at a time. ( After all the filtering ). ",Object(o.b)("strong",{parentName:"p"},"Default:")," ",Object(o.b)("inlineCode",{parentName:"p"},"10"),"."),Object(o.b)("h4",{id:"page-number"},Object(o.b)("inlineCode",{parentName:"h4"},"page?: number")),Object(o.b)("p",null,"Optionally pass your own page in to make the pagination component controlled from props."),Object(o.b)("h4",{id:"onpagechange-page-number--void"},Object(o.b)("inlineCode",{parentName:"h4"},"onPageChange?: (page: number) => void")),Object(o.b)("p",null,"Function to call after the new page has been set when the user changes the page"),Object(o.b)("h4",{id:"watchlist-any"},Object(o.b)("inlineCode",{parentName:"h4"},"watchList?: any[]")),Object(o.b)("p",null,"Array of data points that, when changed, causes the pagination to update. This is helpful when the ",Object(o.b)("inlineCode",{parentName:"p"},"items")," prop is a function and you want ",Object(o.b)("inlineCode",{parentName:"p"},"items")," to be called to get the most up-to-date list."),Object(o.b)("h4",{id:"resetparams-any"},Object(o.b)("inlineCode",{parentName:"h4"},"resetParams?: any[]")),Object(o.b)("p",null,"Array of data points that, when changed, causes pagination to reset the current page to 1."),Object(o.b)("h4",{id:"defaultpage-number"},Object(o.b)("inlineCode",{parentName:"h4"},"defaultPage?: number")),Object(o.b)("p",null,"The starting page to use when the component mounts. ",Object(o.b)("strong",{parentName:"p"},"Default:")," ",Object(o.b)("inlineCode",{parentName:"p"},"1"),"."),Object(o.b)("h4",{id:"debouncetimeout-number"},Object(o.b)("inlineCode",{parentName:"h4"},"debounceTimeout?: number")),Object(o.b)("p",null,"The amount of time (in milliseconds) to delay fetching page data since the last time page data was fetched (debounced input). Useful for when ",Object(o.b)("inlineCode",{parentName:"p"},"items")," is a function that's calling an api that you want to relieve pressure on. ",Object(o.b)("strong",{parentName:"p"},"Default"),": ",Object(o.b)("inlineCode",{parentName:"p"},"0")),Object(o.b)("h4",{id:"shouldreturnprevious-boolean"},Object(o.b)("inlineCode",{parentName:"h4"},"shouldReturnPrevious?: boolean")),Object(o.b)("p",null,"If ",Object(o.b)("inlineCode",{parentName:"p"},"true"),", the previous results are returned. Note: if no results have been fetched thus far, an empty array is returned. Useful for when ",Object(o.b)("inlineCode",{parentName:"p"},"items")," is a function and new results should not be fetched until certain criteria is met. ",Object(o.b)("strong",{parentName:"p"},"Default:")," ",Object(o.b)("inlineCode",{parentName:"p"},"false"),"."),Object(o.b)("h4",{id:"onerror-error-error--void"},Object(o.b)("inlineCode",{parentName:"h4"},"onError?: (error: Error) => void")),Object(o.b)("p",null,"Function to call when an error occurs"))}s.isMDXComponent=!0}}]);
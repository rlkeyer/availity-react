(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{143:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n(3),o=n(7),l=(n(0),n(168)),i=["components"],r={title:"<Select />"},p={unversionedId:"form/select/components/select",id:"form/select/components/select",isDocsHomePage:!1,title:"<Select />",description:"Select dropdown without a Label or Feedback",source:"@site/docs/form/select/components/select.md",slug:"/form/select/components/select",permalink:"/availity-react/form/select/components/select",editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/select/components/select.md",version:"current",sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/availity-react/form/select/index"},next:{title:"<SelectField />",permalink:"/availity-react/form/select/components/select-field"}},c=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[]},{value:"<code>options: object[]</code>",id:"options-object",children:[]},{value:"<code>raw?: boolean</code>",id:"raw-boolean",children:[]},{value:"<code>waitUntilFocused?: boolean</code>",id:"waituntilfocused-boolean",children:[]},{value:"<code>autofill?: boolean | AutoFillType</code>",id:"autofill-boolean--autofilltype",children:[]}],b={toc:c};function u(e){var t=e.components,n=Object(o.a)(e,i);return Object(l.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Select dropdown without a Label or Feedback"),Object(l.b)("h3",{id:"example"},"Example"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Form } from '@availity/form';\nimport Select, { SelectField } from '@availity/select';\nimport { Button } from 'reactstrap';\nimport * as yup from 'yup';\nimport '@availity/yup';\n\nconst Example = () => (\n  <Form\n    initialValues={{\n      justTheInput: undefined,\n    }}\n    onSubmit={(values) => window.alert(JSON.stringify(values))}\n    validationSchema={yup.object().shape({\n      justTheInput: yup.string().required('This field is required.'),\n    })}\n  >\n    <Select\n      id=\"justTheInput\"\n      name=\"justTheInput\"\n      isMulti={false}\n      options={[\n        { label: 'Option 1', value: 1 },\n        { label: 'Option 2', value: 2 },\n        { label: 'Option 3', value: 3 },\n      ]}\n    />\n\n    <Button className=\"mt-3\" color=\"primary\" type=\"submit\">\n      Submit\n    </Button>\n  </Form>\n);\n")),Object(l.b)("h4",{id:"live-example--storybook"},"Live example: ",Object(l.b)("a",{href:"https://availity.github.io/availity-react/storybook/?path=/story/formik-select--default"}," Storybook")),Object(l.b)("h3",{id:"props"},"Props"),Object(l.b)("p",null,"See ",Object(l.b)("a",{parentName:"p",href:"https://github.com/JedWatson/react-select"},"react-select")," and ",Object(l.b)("a",{parentName:"p",href:"https://github.com/vtaits/react-select-async-paginate"},"react-select-async-paginate")," for additional props."),Object(l.b)("h4",{id:"name-string"},Object(l.b)("inlineCode",{parentName:"h4"},"name: string")),Object(l.b)("p",null,"The name of the field. Will be the key of the selected option(s) that come through in the values of the ",Object(l.b)("inlineCode",{parentName:"p"},"onSubmit")," callback of the form."),Object(l.b)("h3",{id:"options-object"},Object(l.b)("inlineCode",{parentName:"h3"},"options: object[]")),Object(l.b)("p",null,"Array of options that populate the select menu. Grouped options are also supported, but must include the property ",Object(l.b)("inlineCode",{parentName:"p"},"type: 'group'"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"const groupedOptions = [\n  {\n    label: 'options',\n    options: [\n      { label: 'Option 1', value: 'value for option 1' },\n      { label: 'Option 2', value: 'value for option 2' },\n      { label: 'Option 3', value: 'value for option 3' },\n      { label: 'Option 4', value: 'value for option 4' },\n    ],\n    type: 'group',\n  },\n];\n")),Object(l.b)("h3",{id:"raw-boolean"},Object(l.b)("inlineCode",{parentName:"h3"},"raw?: boolean")),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"true"),", the entire object of the selected value is returned as the value instead of the value for the ",Object(l.b)("inlineCode",{parentName:"p"},"valueKey")," within the object."),Object(l.b)("h4",{id:"valuekey-string"},Object(l.b)("inlineCode",{parentName:"h4"},"valueKey?: string")),Object(l.b)("p",null,"The key of the value to return when selected. ",Object(l.b)("strong",{parentName:"p"},"Default:")," ",Object(l.b)("inlineCode",{parentName:"p"},'"value"')),Object(l.b)("h4",{id:"labelkey-string"},Object(l.b)("inlineCode",{parentName:"h4"},"labelKey?: string")),Object(l.b)("p",null,"The key of the label to render in the dropdown for the user to see. ",Object(l.b)("strong",{parentName:"p"},"Default:")," ",Object(l.b)("inlineCode",{parentName:"p"},'"label"')),Object(l.b)("h4",{id:"maxlength-number"},Object(l.b)("inlineCode",{parentName:"h4"},"maxLength?: number")),Object(l.b)("p",null,"The maximum number of options that can be selected ( when ",Object(l.b)("inlineCode",{parentName:"p"},"isMulti")," is ",Object(l.b)("inlineCode",{parentName:"p"},"true"),")"),Object(l.b)("h4",{id:"selectref-ref"},Object(l.b)("inlineCode",{parentName:"h4"},"selectRef?: Ref")),Object(l.b)("p",null,"Ref passed to ",Object(l.b)("inlineCode",{parentName:"p"},"react-select-async-paginate")," component if in async mode."),Object(l.b)("h4",{id:"createable-boolean"},Object(l.b)("inlineCode",{parentName:"h4"},"createable?: boolean")),Object(l.b)("p",null,"Allow new items to be created if not found. ",Object(l.b)("strong",{parentName:"p"},"Default:")," ",Object(l.b)("inlineCode",{parentName:"p"},"false"),"."),Object(l.b)("h4",{id:"allowselectall-boolean"},Object(l.b)("inlineCode",{parentName:"h4"},"allowSelectAll?: boolean")),Object(l.b)("p",null,"Adds a ",Object(l.b)("inlineCode",{parentName:"p"},"Select all")," option ( when ",Object(l.b)("inlineCode",{parentName:"p"},"isMulti")," is ",Object(l.b)("inlineCode",{parentName:"p"},"true"),"). Note: ",Object(l.b)("inlineCode",{parentName:"p"},"allowSelectAll")," is ignored when ",Object(l.b)("inlineCode",{parentName:"p"},"loadOptions")," is defined."),Object(l.b)("h3",{id:"waituntilfocused-boolean"},Object(l.b)("inlineCode",{parentName:"h3"},"waitUntilFocused?: boolean")),Object(l.b)("p",null,"When true, the network request is not made until the dropdown has been focused. Defaults to ",Object(l.b)("inlineCode",{parentName:"p"},"false"),"."),Object(l.b)("h3",{id:"autofill-boolean--autofilltype"},Object(l.b)("inlineCode",{parentName:"h3"},"autofill?: boolean | AutoFillType")),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"true"),", when the value of the dropdown changes, if the ",Object(l.b)("inlineCode",{parentName:"p"},"isMulti")," prop is ",Object(l.b)("inlineCode",{parentName:"p"},"false")," ",Object(l.b)("em",{parentName:"p"},"and")," the new value of the dropdown is an object, all fields on the form corresponding to the new value are auto-filled. In order for a field to be auto-filled, the ",Object(l.b)("inlineCode",{parentName:"p"},"name")," property on the field ",Object(l.b)("em",{parentName:"p"},"must")," match the key inside the new value."),Object(l.b)("p",null,"For example, if the new value is ",Object(l.b)("inlineCode",{parentName:"p"},'{ "payer": "Availity" }'),', in order for the payer input in the form to be auto-filled to "Availity", the ',Object(l.b)("inlineCode",{parentName:"p"},"name"),' prop on the input must be "payer".'),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"autofill")," is an object, when the value of the dropdown changes, if the ",Object(l.b)("inlineCode",{parentName:"p"},"isMulti")," prop is ",Object(l.b)("inlineCode",{parentName:"p"},"false")," ",Object(l.b)("em",{parentName:"p"},"and")," the new value of the dropdown is an object, all fields on the form corresponding to the keys in the ",Object(l.b)("inlineCode",{parentName:"p"},"autofill")," prop will be auto-filled."),Object(l.b)("p",null,"When ",Object(l.b)("inlineCode",{parentName:"p"},"autofill")," is an object, the values in the object can be a string or a function. When a string, the key in the ",Object(l.b)("inlineCode",{parentName:"p"},"autofill")," prop gets auto-filled to that path on the selected option. When a function, it gets called with the selected option, and the key in the ",Object(l.b)("inlineCode",{parentName:"p"},"autofill")," prop gets auto-filled to the return value of the function."),Object(l.b)("p",null,"For example, if the new value is ",Object(l.b)("inlineCode",{parentName:"p"},'{ "payer": { "name": "Availity", "id": "1" } }'),', in order for the "payerName", "payerId", and "payerNameAndId" inputs to be auto-filled to "Availity", "1", and "1 - Availity" respectively, the ',Object(l.b)("inlineCode",{parentName:"p"},"autofill")," prop should be:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"{\n  payerName: 'payer.name',\n  payerId: 'payer.id',\n  payerNameAndId: opt => `${opt.payer.id} - ${opt.payer.name}`,\n}\n")))}u.isMDXComponent=!0},168:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),o=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),b=function(e){var t=o.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=b(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=b(n),d=a,m=u["".concat(i,".").concat(d)]||u[d]||s[d]||l;return n?o.a.createElement(m,r(r({ref:t},c),{},{components:n})):o.a.createElement(m,r({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r.mdxType="string"==typeof e?e:a,i[1]=r;for(var c=2;c<l;c++)i[c]=n[c];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);
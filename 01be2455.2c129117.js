(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{168:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=b(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=b(n),u=a,m=d["".concat(o,".").concat(u)]||d[u]||s[u]||i;return n?r.a.createElement(m,l(l({ref:t},p),{},{components:n})):r.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},64:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),i=(n(0),n(168)),o=["components"],l={title:"<Field />"},c={unversionedId:"form/components/field",id:"form/components/field",isDocsHomePage:!1,title:"<Field />",description:"Input field wrapped in additional features such as label, feedback, grid options, etc",source:"@site/docs/form/components/field.md",slug:"/form/components/field",permalink:"/availity-react/form/components/field",editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/components/field.md",version:"current",sidebar:"someSidebar",previous:{title:"<Feedback />",permalink:"/availity-react/form/components/feedback"},next:{title:"<FormGroup />",permalink:"/availity-react/form/components/form-group"}},p=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[]}],b={toc:p};function d(e){var t=e.components,n=Object(r.a)(e,o);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Input field wrapped in additional features such as label, feedback, grid options, etc"),Object(i.b)("h3",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Form, Field } from '@availity/form';\nimport { Button } from 'reactstrap';\nimport * as yup from 'yup';\n\nconst Example = () => (\n  <Form\n    initialValues={{\n      hello: '',\n    }}\n    onSubmit={(values) => alert(JSON.stringify(values))}\n    validationSchema={yup.object({\n      hello: yup.string().isRequired(true),\n    })}\n  >\n    <Field name=\"hello\" label=\"Greeting\" />\n    <Button type=\"submit\" color=\"primary\">\n      Submit\n    </Button>\n  </Form>\n);\n")),Object(i.b)("h4",{id:"live-example-storybook"},"Live example: ",Object(i.b)("a",{parentName:"h4",href:"https://availity.github.io/availity-react/storybook/?path=/story/formik-form--field"},"Storybook")),Object(i.b)("h3",{id:"props"},"Props"),Object(i.b)("h4",{id:"name-string"},Object(i.b)("inlineCode",{parentName:"h4"},"name: string")),Object(i.b)("p",null,"Identifies the field and matches the validation schema."),Object(i.b)("h4",{id:"tag-reactcomponenttype--string"},Object(i.b)("inlineCode",{parentName:"h4"},"tag?: React.ComponentType | string")),Object(i.b)("p",null,"The Node or tag to substitute as the input field. Default is reactstrap ",Object(i.b)("inlineCode",{parentName:"p"},"Input")," tag."),Object(i.b)("h4",{id:"label-reactreactnode"},Object(i.b)("inlineCode",{parentName:"h4"},"label?: React.ReactNode")),Object(i.b)("p",null,"Displays a Reactstrap ",Object(i.b)("inlineCode",{parentName:"p"},"<Label />")," for the field"),Object(i.b)("h4",{id:"labelhidden-boolean"},Object(i.b)("inlineCode",{parentName:"h4"},"labelHidden? boolean")),Object(i.b)("p",null,"Used to hide the label."),Object(i.b)("h4",{id:"disabled-boolean"},Object(i.b)("inlineCode",{parentName:"h4"},"disabled? boolean")),Object(i.b)("p",null,"Disable the ",Object(i.b)("inlineCode",{parentName:"p"},"<Field />"),"."),Object(i.b)("h4",{id:"readonly-boolean"},Object(i.b)("inlineCode",{parentName:"h4"},"readOnly? boolean")),Object(i.b)("p",null,"Mark the field as read only."),Object(i.b)("h4",{id:"size-string"},Object(i.b)("inlineCode",{parentName:"h4"},"size? string")),Object(i.b)("p",null,"Size of the input field. Potential values: ",Object(i.b)("inlineCode",{parentName:"p"},'"lg"'),", ",Object(i.b)("inlineCode",{parentName:"p"},'"sm"')),Object(i.b)("h4",{id:"inputclass-string"},Object(i.b)("inlineCode",{parentName:"h4"},"inputClass?: string")),Object(i.b)("p",null,"Class names passed to the input tag."),Object(i.b)("h4",{id:"labelclass-string"},Object(i.b)("inlineCode",{parentName:"h4"},"labelClass?: string")),Object(i.b)("p",null,"Class names passed to the label tag."),Object(i.b)("h4",{id:"helpid-string"},Object(i.b)("inlineCode",{parentName:"h4"},"helpId?: string")),Object(i.b)("p",null,"Help topic id, adds ",Object(i.b)("inlineCode",{parentName:"p"},"<FieldHelpIcon/>")," next to the label (should not be within label for accessibility)."),Object(i.b)("h4",{id:"helpmessage-reactreactnode"},Object(i.b)("inlineCode",{parentName:"h4"},"helpMessage?: React.ReactNode")),Object(i.b)("p",null,"Display info text below the field"),Object(i.b)("h4",{id:"labelattrs-reacthtmlattributeshtmllabelelement"},Object(i.b)("inlineCode",{parentName:"h4"},"labelAttrs?: React.HTMLAttributes<HTMLLabelElement>")),Object(i.b)("p",null,"Pass additonal attributes to the label"),Object(i.b)("h4",{id:"groupattrs-formgroupprops"},Object(i.b)("inlineCode",{parentName:"h4"},"groupAttrs?: FormGroupProps")),Object(i.b)("p",null,"Pass additonal attributes to ",Object(i.b)("a",{parentName:"p",href:"/form/components/form-group/#props"},"Form Group")),Object(i.b)("h4",{id:"grid-object"},Object(i.b)("inlineCode",{parentName:"h4"},"grid?: object")),Object(i.b)("p",null,"Object mapping number of columns to the label and input."),Object(i.b)("h4",{id:"children--input-reactreactnode-feedback-reactreactnode---reactreactnode"},Object(i.b)("inlineCode",{parentName:"h4"},"children?: ({ input: React.ReactNode, feedback: React.ReactNode }) => React.ReactNode")),Object(i.b)("p",null,"Optionally override the way the input is rendered with child render prop."),Object(i.b)("h4",{id:"append-reactreactnode--string"},Object(i.b)("inlineCode",{parentName:"h4"},"append?: React.ReactNode | string")),Object(i.b)("p",null,"Append an InputAddon to the end of the Input."),Object(i.b)("h4",{id:"prepend-reactreactnode--string"},Object(i.b)("inlineCode",{parentName:"h4"},"prepend?: React.ReactNode | string")),Object(i.b)("p",null,"Append an InputAddon to the start of the Input."))}d.isMDXComponent=!0}}]);
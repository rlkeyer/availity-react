(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{130:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return u}));var o=n(3),r=n(7),a=(n(0),n(168)),c=["components"],i={title:"<Checkbox />"},l={unversionedId:"form/components/checkbox",id:"form/components/checkbox",isDocsHomePage:!1,title:"<Checkbox />",description:"Inputs of type checkbox. Checkboxes should be wrapped in a CheckboxGroup.",source:"@site/docs/form/components/checkbox.md",slug:"/form/components/checkbox",permalink:"/availity-react/form/components/checkbox",editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/components/checkbox.md",version:"current",sidebar:"someSidebar",previous:{title:"<CheckboxGroup />",permalink:"/availity-react/form/components/checkbox-group"},next:{title:"<Feedback />",permalink:"/availity-react/form/components/feedback"}},b=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[]}],p={toc:b};function u(e){var t=e.components,n=Object(r.a)(e,c);return Object(a.b)("wrapper",Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Inputs of type checkbox. Checkboxes should be wrapped in a CheckboxGroup."),Object(a.b)("h3",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},'import React from \'react\';\nimport { Form, Checkbox, CheckboxGroup } from \'@availity/form\';\nimport { Button } from \'reactstrap\';\nimport * as yup from \'yup\';\n\nconst Example = () => (\n  <Form\n    initialValues={{\n      hello: [],\n    }}\n    onSubmit={() => {}}\n    validationSchema={yup.object().shape({\n      hello: yup.array().required(\'At least one checkbox is required\'),\n    })}\n  >\n    <CheckboxGroup name="hello" label="Checkbox Group">\n      <Checkbox groupName="hello" label="Check One" value="uno" />\n      <Checkbox groupName="hello" label="Check Two" value="dos" />\n      <Checkbox groupName="hello" label="Check Three" value="tres" />\n    </CheckboxGroup>\n    <Button type="submit" color="primary">\n      Submit\n    </Button>\n  </Form>\n);\n')),Object(a.b)("h4",{id:"live-example-storybook"},"Live example: ",Object(a.b)("a",{parentName:"h4",href:"https://availity.github.io/availity-react/storybook/?path=/story/formik-form--checkbox"},"Storybook")),Object(a.b)("h3",{id:"props"},"Props"),Object(a.b)("h4",{id:"id-string"},Object(a.b)("inlineCode",{parentName:"h4"},"id?: string")),Object(a.b)("p",null,"Id and name for the checkbox."),Object(a.b)("h4",{id:"groupname-string"},Object(a.b)("inlineCode",{parentName:"h4"},"groupName?: string")),Object(a.b)("p",null,"Should match ",Object(a.b)("inlineCode",{parentName:"p"},"<CheckboxGroup />")," name to accessibly link input to form feedback."),Object(a.b)("h4",{id:"label-reactnode"},Object(a.b)("inlineCode",{parentName:"h4"},"label?: ReactNode")),Object(a.b)("p",null,"Label for the checkbox."),Object(a.b)("h4",{id:"helpid-string"},Object(a.b)("inlineCode",{parentName:"h4"},"helpId?: string")),Object(a.b)("p",null,"Help topic id, adds ",Object(a.b)("inlineCode",{parentName:"p"},"<FieldHelpIcon/>")," next to the label (should not be within label for accessibility)."),Object(a.b)("h4",{id:"value-string"},Object(a.b)("inlineCode",{parentName:"h4"},"value?: string")),Object(a.b)("p",null,"Value of the checkbox."),Object(a.b)("h4",{id:"disabled-boolean"},Object(a.b)("inlineCode",{parentName:"h4"},"disabled?: boolean")),Object(a.b)("p",null,"Disables the checkbox."),Object(a.b)("h4",{id:"inline-boolean"},Object(a.b)("inlineCode",{parentName:"h4"},"inline?: boolean")),Object(a.b)("p",null,"Will render the checkbox inline with other checkboxes. ",Object(a.b)("strong",{parentName:"p"},"Default:")," true."))}u.isMDXComponent=!0},168:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(c,".").concat(m)]||u[m]||s[m]||a;return n?r.a.createElement(h,i(i({ref:t},b),{},{components:n})):r.a.createElement(h,i({ref:t},b))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var b=2;b<a;b++)c[b]=n[b];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);
{"version":3,"sources":["webpack:///../packages/analytics/src/Analytics.js"],"names":["AnalyticsContext","createContext","Analytics","children","plugins","pageTracking","autoTrack","recursive","attributePrefix","eventModifiers","analytics","useRef","AvAnalytics","Promise","cleanup","current","stopAutoTrack","useEffect","init","trackPageView","Provider","value","useAnalytics","useContext","propTypes","PropTypes","node","array","bool","string","defaultProps"],"mappings":"slBAIaA,iBAAmBC,8BAE1BC,oBAAY,SAAZA,UAAa,MAA+F,IAA7FC,SAA6F,KAA7FA,SAAUC,QAAmF,KAAnFA,QAASC,aAA0E,KAA1EA,aAAcC,UAA4D,KAA5DA,UAAWC,UAAiD,KAAjDA,UAAWC,gBAAsC,KAAtCA,gBAAiBC,eAAqB,KAArBA,eACrFC,UAAYC,qBAChB,IAAIC,MAAYR,QAASS,QAASR,aAAcC,UAAW,CACzDC,oBACAC,gCACAC,iCAIEK,QAAU,SAAVA,UAAU,OAAMJ,UAAUK,QAAQC,iBAYxC,OAVAC,yBAAU,WAOR,OANAP,UAAUK,QAAQG,OAEdb,cACFK,UAAUK,QAAQI,gBAGbL,UACN,CAACT,eAEG,wBAACL,iBAAiBoB,SAAlB,CAA2BC,MAAOX,UAAUK,QAA5C,SAAsDZ,YArBzDD,oB,wBAwBC,IAAMoB,uBAAe,SAAfA,eAAe,OAAMC,yBAAWvB,mBAE7CE,oBAAUsB,UAAY,CACpBrB,SAAUsB,qBAAUC,KACpBtB,QAASqB,qBAAUE,MACnBtB,aAAcoB,qBAAUG,KACxBtB,UAAWmB,qBAAUG,KACrBrB,UAAWkB,qBAAUG,KACrBpB,gBAAiBiB,qBAAUI,OAC3BpB,eAAgBgB,qBAAUE,OAG5BzB,oBAAU4B,aAAe,CACvBxB,WAAW,EACXD,cAAc,EACdE,WAAW,EACXC,gBAAiB,iBACjBC,eAAgB,CAAC,W,4tBAGJP,sC","file":"14.194d456c.iframe.bundle.js","sourcesContent":["import React, { createContext, useContext, useRef, useEffect } from 'react';\nimport { AvAnalytics } from '@availity/analytics-core';\nimport PropTypes from 'prop-types';\n\nexport const AnalyticsContext = createContext();\n\nconst Analytics = ({ children, plugins, pageTracking, autoTrack, recursive, attributePrefix, eventModifiers }) => {\n  const analytics = useRef(\n    new AvAnalytics(plugins, Promise, pageTracking, autoTrack, {\n      recursive,\n      attributePrefix,\n      eventModifiers,\n    })\n  );\n\n  const cleanup = () => analytics.current.stopAutoTrack();\n\n  useEffect(() => {\n    analytics.current.init();\n\n    if (pageTracking) {\n      analytics.current.trackPageView();\n    }\n\n    return cleanup;\n  }, [pageTracking]);\n\n  return <AnalyticsContext.Provider value={analytics.current}>{children}</AnalyticsContext.Provider>;\n};\n\nexport const useAnalytics = () => useContext(AnalyticsContext);\n\nAnalytics.propTypes = {\n  children: PropTypes.node,\n  plugins: PropTypes.array,\n  pageTracking: PropTypes.bool,\n  autoTrack: PropTypes.bool,\n  recursive: PropTypes.bool,\n  attributePrefix: PropTypes.string,\n  eventModifiers: PropTypes.array,\n};\n\nAnalytics.defaultProps = {\n  autoTrack: true,\n  pageTracking: true,\n  recursive: true,\n  attributePrefix: 'data-analytics',\n  eventModifiers: ['action'],\n};\n\nexport default Analytics;\n"],"sourceRoot":""}
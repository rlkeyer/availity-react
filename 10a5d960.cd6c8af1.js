(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{168:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return d}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),p=function(e){var n=o.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=p(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),l=p(t),f=r,d=l["".concat(c,".").concat(f)]||l[f]||m[f]||a;return t?o.a.createElement(d,i(i({ref:n},s),{},{components:t})):o.a.createElement(d,i({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=f;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<a;s++)c[s]=t[s];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},69:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return u})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(3),o=t(7),a=(t(0),t(168)),c=["components"],i={title:"useMount"},u={unversionedId:"components/hooks/use-mount",id:"components/hooks/use-mount",isDocsHomePage:!1,title:"useMount",description:"Hook that runs a function on mount and dismount if a function is returned.",source:"@site/docs/components/hooks/use-mount.md",slug:"/components/hooks/use-mount",permalink:"/availity-react/components/hooks/use-mount",editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/hooks/use-mount.md",version:"current",sidebar:"someSidebar",previous:{title:"useEffectAsync",permalink:"/availity-react/components/hooks/use-effect-async"},next:{title:"useCurrentRegion",permalink:"/availity-react/components/hooks/use-region"}},s=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[]}],p={toc:s};function l(e){var n=e.components,t=Object(o.a)(e,c);return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Hook that runs a function on mount and dismount if a function is returned."),Object(a.b)("h3",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { useMount } from '@availity/hooks';\n\nconst Example = () => {\n  useMount(() => {\n    doSomethingOnMount();\n\n    return () => {\n      doSomethingOnDismount();\n    };\n  });\n\n  return <div>Test Component</div>;\n};\n")),Object(a.b)("h3",{id:"props"},"Props"),Object(a.b)("h4",{id:"callback---void"},Object(a.b)("inlineCode",{parentName:"h4"},"callback: () => void")),Object(a.b)("p",null,"Function to run when the component mounts."))}l.isMDXComponent=!0}}]);
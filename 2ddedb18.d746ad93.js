(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{168:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,d=p["".concat(l,".").concat(m)]||p[m]||g[m]||a;return n?r.a.createElement(d,i(i({ref:t},s),{},{components:n})):r.a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},92:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var o=n(3),r=n(7),a=(n(0),n(168)),l=["components"],i={title:"useToggle"},c={unversionedId:"components/hooks/use-toggle",id:"components/hooks/use-toggle",isDocsHomePage:!1,title:"useToggle",description:"Returns a boolean that can easily be toggled. Useful for loaders, and toggle components.",source:"@site/docs/components/hooks/use-toggle.md",slug:"/components/hooks/use-toggle",permalink:"/availity-react/components/hooks/use-toggle",editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/hooks/use-toggle.md",version:"current",sidebar:"someSidebar",previous:{title:"useTimeout",permalink:"/availity-react/components/hooks/use-timeout"},next:{title:"usePermissions",permalink:"/availity-react/components/hooks/use-permissions"}},s=[{value:"Example",id:"example",children:[]},{value:"Props",id:"props",children:[]}],u={toc:s};function p(e){var t=e.components,n=Object(r.a)(e,l);return Object(a.b)("wrapper",Object(o.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Returns a boolean that can easily be toggled. Useful for loaders, and toggle components."),Object(a.b)("h3",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { useToggle } from '@availity/hooks';\n\nconst Example = () => {\n  const [isToggled, toggle] = useToggle();\n\n  return <div onClick={toggle}>{isToggled ? 'Hello' : 'World'}</div>;\n};\n")),Object(a.b)("p",null,"You can also pass the state you want to set the toggle to. If it hasn't changed, it will not perform a state update."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { useToggle } from '@availity/hooks';\n\n// This component will never re-render because the toggle is already set to `true`\nconst Example = () => {\n  const [isToggled, toggle] = useToggle(true);\n\n  return (\n    <div onClick={() => toggle(true)}>{isToggled ? 'Hello' : 'World'}</div>\n  );\n};\n")),Object(a.b)("h3",{id:"props"},"Props"),Object(a.b)("h4",{id:"initialstate-boolean"},Object(a.b)("inlineCode",{parentName:"h4"},"initialState?: boolean")),Object(a.b)("p",null,"The intital state of the toggle. ",Object(a.b)("strong",{parentName:"p"},"Default:")," ",Object(a.b)("inlineCode",{parentName:"p"},"false")))}p.isMDXComponent=!0}}]);